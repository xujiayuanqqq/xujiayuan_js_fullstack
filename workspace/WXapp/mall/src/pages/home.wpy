<template>
    <view>
        <!-- bombscreen ? 内置的组件 自定义的html标签 组件将一组功能封装到一个combscreen里，且在页面上可以用自定义标签的形式引入 -->
        <!-- 首页列表 不再注意细节，而是分组件 -->
        <!-- 组件暂无数据的提示 -->
        <!-- 幻灯片  -->
        <!-- 加 : 改变数据 加 .sync(同步) 改变状态 -->
        <discover></discover>
        <bottomLoadMore :message='mes' :show.sync="showLoading"></bottomLoadMore>
        <!-- <comment>
            <commemt-input>
                <comment-list>
                    <comment-item />
                    <comment-item />
                    <comment-item />                    
                </comment-list>
            </commemt-input>
        </comment> -->
        <placeholder></placeholder>
        <!-- 弹出广告 -->
        <bombscreen></bombscreen>
    </view>
</template>
<script>
    //wepy 在本地的 node_modules下
    import wepy from 'wepy'
    // 将页面换一个视角(切页面)， 组件视角(粗， 大体)
    import Discover from '@/components/discover';
    import BottomLoadMore from '@/components/bottomLoadMore';
    import Placeholder from '@/components/placeholder';
    import Bombscreen from '@/components/bomb_screen';
    //单页面组件
    export default class Home extends wepy.page{
        //不是json , es6 class
        data = {
            showLoading: false,
            mes: '加载更多...'
        }

        onLoad () {
            this.showLoading = true;
        }
        // 页面的组件构成 多人协作，将复杂度细化， 可读性更强
        components = {
            discover: Discover,
            bottomLoadMore: BottomLoadMore,
            placeholder: Placeholder,
            bombscreen: Bombscreen
        }
    }
</script>
<style lang="less">
.loadMoreGif {
    margin: 15rpx auto;
    width: 220rpx;
    display: flex;
    justify-content: center;
    align-items: center;
    text {
        font-size: 30rpx;
        color: #999999;
        margin-left: 10rpx;
    }
    image {
        width: 30rpx;
        height: 30rpx;
    }
}
</style>